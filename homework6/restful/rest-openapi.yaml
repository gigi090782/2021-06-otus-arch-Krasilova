openapi: 3.0.0
info:
  title: Обработка заказов
  version: 0.1.0

tags:
  - name: billing
    description: Сервис биллинга
  - name: order
    description: Сервис заказов
  - name: notification
    description: Сервис нотификаций

paths:
  /billing/register:
    post:
      tags:
        - billing
      summary: Регистрация пользователя
      description: Регистрация пользователя и создание аккаунта в сервисе биллинга.
      operationId: registerUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: Регистрация прошла успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неправильный запрос
  /billing/transfer:
    post:
      tags:
        - billing
      summary: Перечисление денег на аккаунт пользователя
      description: Пополнение счета. После регистрации пользователь пополняет свой счет.
      operationId: billingTransfer
      requestBody:
        $ref: '#/components/requestBodies/BillingTransfer'
      responses:
        '201':
          description: Операция выполнена успешно
        '400':
          description: Неправильный запрос
  /billing/withdraw:
    post:
      tags:
        - billing
      summary: Снятие денег с аккаунта пользователя
      description: Снятие средств. После регистрации пользователь может снять деньги со своего счета.
      operationId: billingWithdraw
      requestBody:
        $ref: '#/components/requestBodies/BillingTransfer'
      responses:
        '201':
          description: Операция выполнена успешно
        '400':
          description: Неправильный запрос
  /billing/paymentOrder:
    post:
      tags:
        - billing
      summary: Обработка заказа
      description: Обработка заказа. Снятие средств со счета пользователя при обработке заказа.
      operationId: billingPayment
      requestBody:
        $ref: '#/components/requestBodies/BillingPayment'
      responses:
        '201':
          description: Операция выполнена успешно
        '400':
          description: Неправильный запрос

  /order/create:
    post:
      tags:
        - order
      summary: Создание заказа пользователем
      description: Создание заказа и его обработка
      operationId: orderCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: integer
              required:
                - price
            example:
              price: 45670
      responses:
        '201':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Неправильный запрос

  /notification/{userId}:
    get:
      tags:
        - notification
      summary: Получение списка сообщений
      description: Получение списка сообщений для указанного пользователя
      operationId: getNotificationsById
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
        '400':
          description: Неправильный запрос
        '404':
          description: Такого пользователя нет

    post:
      tags:
        - notification
      summary: Отправка уведомления
      description: Метод для отправки уведомления пользователю на почту
      operationId: sendEmail
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                templateId:
                  type: integer
                context:
                  type: object
              required:
                - email
                - templateId
                - context
            example:
              email: "ivan@ivanov.ru"
              templateId: 42
              context:
                firstName: ivan
                lastName: ivanov
                orderNumber: 1234
      responses:
        '202':
          description: Рассылка взята в работу
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
              example:
                jobId: 000123

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12345
        username:
          type: string
          example: ivan1
        firstName:
          type: string
          example: Ivan
        lastName:
          type: string
          example: Ivanov
        email:
          type: string
          example: ivan@ivanov.com
        password:
          type: string
        phone:
          type: string
          example: +79161112233
        address:
          type: string
          example: ул Ленина д 1 кв 2
      required: 
          - username
          - password
          - email

    BillingTransfer:
      type: object
      properties:
        price:
          type: integer
          format: int64
      required:
        - price

    BillingPayment:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        price:
          type: integer
          format: int64
      required:
        - orderId
        - price

    Order:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
          example: 4356455
        price:
          type: integer
          format: int64
          example: 56780
      required:
        - orderId
        - price

    Notification:
      type: object
      properties:
        email:
          type: string
          format: email
        templateId:
          type: integer
        context:
          type: object
      required:
        - email
        - templateId
        - context

    Notifications:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
      required:
        - items

  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            sample-user:
              summary: Обычный пользователь
              value:
                username: ivan1
                firstName: Ivan
                lastName: Ivanov
                email: ivan@ivanov.com
                phone: '+79161112233'
                password: '1Qaz'
                address: 'ул Ленина д 1 кв 2'
      description: Данные создаваемого пользователя
      required: true

    BillingTransfer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BillingTransfer'
          examples:
            sample-billing-transfer:
              summary: Снятие денег с аккаунта пользователя
              value:
                price: 111
      required: true

    BillingPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BillingPayment'
          examples:
            sample-billing-transfer:
              summary: Снятие денег с аккаунта пользователя при обработке заказа
              value:
                orderId: 12
                price: 111
      required: true
